name: Docker Image CI

on: push

jobs:

  test:
    runs-on: ubuntu-latest
    env:
      APP_PORT: ${{secrets.APP_PORT}}
      SQL_DB_HOST: ${{secrets.SQL_DB_HOST}}
      SQL_DB_PORT: ${{secrets.SQL_DB_PORT}}
      SQL_DB_USERNAME: ${{secrets.SQL_DB_USERNAME}}
      SQL_DB_PASSWORD: ${{secrets.SQL_DB_PASSWORD}}
      SQL_DB_DATABASE: ${{secrets.SQL_DB_DATABASE}}
      JWT_SECRET: ${{secrets.JWT_SECRET}}
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Create DB
        run: npm run dc-up

      - name: Install dependencies
        run: npm i

      - name: Init DB (run all migrations locally)
        run: npm run typeorm migration:run

      - name: Run tests
        run: npm test

  runMigrations:
    needs: test
    runs-on: self-hosted

    env:
      APP_PORT: 4000 # it doesnt really matter, just fill in so the app wont crash
      SQL_DB_HOST: ${{secrets.DEV_SQL_DB_HOST}}
      SQL_DB_PORT: ${{secrets.DEV_SQL_DB_PORT}}
      SQL_DB_USERNAME: ${{secrets.DEV_SQL_DB_USERNAME}}
      SQL_DB_PASSWORD: ${{secrets.DEV_SQL_DB_PASSWORD}}
      SQL_DB_DATABASE: ${{secrets.DEV_SQL_DB_DATABASE}}
      JWT_SECRET: test # it doesnt really matter, just fill in so the app wont crash
    
    if: success() && github.ref == 'refs/heads/dev'
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup node14/npm
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install dependencies
        run: npm i

      - name: Run migrations against DEV sql server
        run: npm run typeorm migration:run
      
  buildAppAndPublish:
    needs: runMigrations
    runs-on: ubuntu-latest
    
    if: success() && github.ref == 'refs/heads/dev'
    steps:
    
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build the Docker image
        run: docker build -t ${{secrets.CI_REG_PATH}}/techmodel-backend:latest .

      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{secrets.CI_REG_PATH}}
          username: ${{secrets.CI_REG_USERNAME}}
          password: ${{secrets.CI_REG_PASSWORD}}

      - name: Publish the Docker image
        run: docker push ${{secrets.CI_REG_PATH}}/techmodel-backend:latest
